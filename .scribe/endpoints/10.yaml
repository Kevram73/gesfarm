name: 'Task Management'
description: |-

  APIs for managing tasks and work assignments
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Tasks'
      description: 'Retrieve a paginated list of tasks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'Filter by task type (agricultural, livestock, maintenance, administrative)'
        required: false
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (pending, in_progress, completed, cancelled)'
        required: false
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'Filter by priority (low, medium, high, urgent)'
        required: false
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_to:
        name: assigned_to
        description: 'Filter by assigned user ID'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Filter by zone ID'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in title and description'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      type: itaque
      status: ipsa
      priority: laudantium
      assigned_to: 3
      zone_id: 15
      search: et
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "tasks": [...],
              "pagination": {...}
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vghda6P5fv46kEa138bDZec'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Task'
      description: 'Create a new task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Task title'
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Task description'
        required: true
        example: 'Unde eum est rerum velit qui et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Task type (agricultural, livestock, maintenance, administrative)'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'Task priority (low, medium, high, urgent)'
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Due date'
        required: true
        example: autem
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_to:
        name: assigned_to
        description: 'Assigned user ID'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: error
      description: 'Unde eum est rerum velit qui et.'
      type: laudantium
      priority: voluptatem
      due_date: autem
      assigned_to: 10
      zone_id: 7
      notes: perferendis
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Task created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hkgP834f5bV61ZeD6cvdEaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Task Details'
      description: 'Retrieve a specific task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Task ID'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bhd45Z6cav3kE8DV6Pgafe1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task'
      description: 'Update an existing task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Task ID'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Task title'
        required: false
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Task description'
        required: false
        example: 'Voluptatem consectetur et ut quae reprehenderit accusamus explicabo.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Task type'
        required: false
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'Task priority'
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'Task status'
        required: false
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Due date'
        required: false
        example: at
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_to:
        name: assigned_to
        description: 'Assigned user ID'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: similique
      description: 'Voluptatem consectetur et ut quae reprehenderit accusamus explicabo.'
      type: illum
      priority: velit
      status: exercitationem
      due_date: at
      assigned_to: 1
      zone_id: 19
      notes: ipsa
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Task updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6haP3D4gk5Efceb18V6Zdav'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task'
      description: 'Delete a task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Task ID'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Task deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ph64Dv61fdZbca3k5egEVa8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Get My Tasks'
      description: 'Get tasks assigned to the authenticated user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status'
        required: false
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Filter by type'
        required: false
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      overdue:
        name: overdue
        description: 'Filter overdue tasks'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      status: incidunt
      type: fugit
      overdue: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "tasks": [...],
              "pagination": {...}
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v8E46faVgP56adecbZh1D3k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}/complete'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks and work assignments
      subgroup: ''
      subgroupDescription: ''
      title: 'Complete Task'
      description: 'Mark a task as completed'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Task ID'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      notes:
        name: notes
        description: 'Completion notes'
        required: false
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      notes: aliquam
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Task completed successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DafdPh5cv136ba8k64egVEZ'
    controller: null
    method: null
    route: null
    custom: []
