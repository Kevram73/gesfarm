name: 'Cattle Management'
description: |-

  APIs for managing cattle and their records
endpoints:
  -
    httpMethods:
      - GET
    uri: api/cattle
    metadata:
      groupName: 'Cattle Management'
      groupDescription: |-

        APIs for managing cattle and their records
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Cattle'
      description: 'Retrieve a paginated list of cattle'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      breed:
        name: breed
        description: 'Filter by breed'
        required: false
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Filter by gender (male, female)'
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (active, sold, deceased)'
        required: false
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Filter by zone ID'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in tag number and name'
        required: false
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      breed: inventore
      gender: est
      status: accusantium
      zone_id: 16
      search: vitae
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "cattle": [...],
              "pagination": {...}
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ge5EfdvVc6Zahkb6a831P4D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cattle
    metadata:
      groupName: 'Cattle Management'
      groupDescription: |-

        APIs for managing cattle and their records
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Cattle'
      description: 'Create a new cattle record'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tag_number:
        name: tag_number
        description: 'Unique tag number'
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Cattle name'
        required: false
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      breed:
        name: breed
        description: 'Breed name'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Gender (male, female)'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      birth_date:
        name: birth_date
        description: 'Birth date'
        required: true
        example: sit
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      mother_tag:
        name: mother_tag
        description: "Mother's tag number"
        required: false
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      father_tag:
        name: father_tag
        description: "Father's tag number"
        required: false
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_weight:
        name: current_weight
        description: 'Current weight in kg'
        required: false
        example: inventore
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      tag_number: mollitia
      name: amet
      breed: qui
      gender: eum
      birth_date: sit
      mother_tag: quos
      father_tag: perspiciatis
      current_weight: inventore
      zone_id: 7
      notes: quas
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Cattle created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gEa461e3vVPDahdfckZ856b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/cattle/{id}'
    metadata:
      groupName: 'Cattle Management'
      groupDescription: |-

        APIs for managing cattle and their records
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Cattle Details'
      description: 'Retrieve a specific cattle with its records'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Cattle ID'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b48f3gcd6PaEDk1V65evZah'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/cattle/{id}'
    metadata:
      groupName: 'Cattle Management'
      groupDescription: |-

        APIs for managing cattle and their records
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Cattle'
      description: 'Update an existing cattle record'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Cattle ID'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tag_number:
        name: tag_number
        description: 'Unique tag number'
        required: false
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Cattle name'
        required: false
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      breed:
        name: breed
        description: 'Breed name'
        required: false
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: Gender
        required: false
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      current_weight:
        name: current_weight
        description: 'Current weight in kg'
        required: false
        example: atque
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: Status
        required: false
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      tag_number: sequi
      name: pariatur
      breed: vel
      gender: repudiandae
      current_weight: atque
      zone_id: 10
      status: atque
      notes: perferendis
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Cattle updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6P86faEchbgk3dZv5DeV14a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cattle/records
    metadata:
      groupName: 'Cattle Management'
      groupDescription: |-

        APIs for managing cattle and their records
      subgroup: ''
      subgroupDescription: ''
      title: 'Record Cattle Data'
      description: 'Record daily cattle data (milk production, weight, health, etc.)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cattle_id:
        name: cattle_id
        description: 'Cattle ID'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      record_date:
        name: record_date
        description: 'Record date'
        required: true
        example: neque
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      milk_production:
        name: milk_production
        description: 'Milk production in liters'
        required: false
        example: alias
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      weight:
        name: weight
        description: 'Weight in kg'
        required: false
        example: repudiandae
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      health_status:
        name: health_status
        description: 'Health status (healthy, sick, treated)'
        required: false
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      health_notes:
        name: health_notes
        description: 'Health observations'
        required: false
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      feeding_notes:
        name: feeding_notes
        description: 'Feeding observations'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      observations:
        name: observations
        description: 'General observations'
        required: false
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      cattle_id: 20
      record_date: neque
      milk_production: alias
      weight: repudiandae
      health_status: quaerat
      health_notes: molestias
      feeding_notes: et
      observations: maxime
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Cattle record created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f3kh56ecD18v6ga4ZdbVEPa'
    controller: null
    method: null
    route: null
    custom: []
