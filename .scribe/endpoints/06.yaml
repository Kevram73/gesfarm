name: 'Poultry Management'
description: |-

  APIs for managing poultry flocks, records, and incubation
endpoints:
  -
    httpMethods:
      - GET
    uri: api/poultry/flocks
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Poultry Flocks'
      description: 'Retrieve a paginated list of poultry flocks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'Filter by flock type (layer, broiler, duck, turkey)'
        required: false
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (active, sold, deceased)'
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Filter by zone ID'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in flock number and breed'
        required: false
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      type: saepe
      status: qui
      zone_id: 1
      search: tempora
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "flocks": [...],
              "pagination": {...}
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b15a466afDh3Vc8gEePZkvd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/poultry/flocks
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Poultry Flock'
      description: 'Create a new poultry flock'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      flock_number:
        name: flock_number
        description: 'Unique flock number'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Flock type (layer, broiler, duck, turkey)'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'Breed name'
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      initial_quantity:
        name: initial_quantity
        description: 'Initial number of birds'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      arrival_date:
        name: arrival_date
        description: 'Arrival date'
        required: true
        example: et
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      flock_number: in
      type: soluta
      breed: reprehenderit
      initial_quantity: 3
      arrival_date: et
      zone_id: 1
      notes: quasi
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Poultry flock created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8Eaa6kf6D4gvZc3edb5hP1V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/poultry/flocks/{id}'
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Poultry Flock'
      description: 'Retrieve a specific poultry flock with its records'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Flock ID'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ab5Zv36c4k6PfgVh1adeDE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/poultry/flocks/{id}'
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Poultry Flock'
      description: 'Update an existing poultry flock'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Flock ID'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      flock_number:
        name: flock_number
        description: 'Unique flock number'
        required: false
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Flock type'
        required: false
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'Breed name'
        required: false
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      current_quantity:
        name: current_quantity
        description: 'Current number of birds'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      zone_id:
        name: zone_id
        description: 'Zone ID'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: Status
        required: false
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      flock_number: ratione
      type: error
      breed: placeat
      current_quantity: 15
      zone_id: 13
      status: esse
      notes: porro
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Poultry flock updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z1ae8vPk43hb6f5cg6dDVaE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/poultry/records
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Record Poultry Data'
      description: 'Record daily poultry data (eggs, feed, mortality, etc.)'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      flock_id:
        name: flock_id
        description: 'Flock ID'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      record_date:
        name: record_date
        description: 'Record date'
        required: true
        example: maiores
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      eggs_collected:
        name: eggs_collected
        description: 'Number of eggs collected'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      feed_consumed:
        name: feed_consumed
        description: 'Feed consumed in kg'
        required: false
        example: ducimus
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      mortality_count:
        name: mortality_count
        description: 'Number of deaths'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      average_weight:
        name: average_weight
        description: 'Average weight in kg'
        required: false
        example: temporibus
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      health_notes:
        name: health_notes
        description: 'Health observations'
        required: false
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      observations:
        name: observations
        description: 'General observations'
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      flock_id: 16
      record_date: maiores
      eggs_collected: 11
      feed_consumed: ducimus
      mortality_count: 16
      average_weight: temporibus
      health_notes: cum
      observations: aut
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Poultry record created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EVdg6hek4av186abfcZ53DP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/poultry/incubation
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Incubation Records'
      description: 'Retrieve incubation records'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      egg_type:
        name: egg_type
        description: 'Filter by egg type'
        required: false
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'Filter by breed'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'date Filter by start date'
        required: false
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      egg_type: delectus
      breed: et
      start_date: quisquam
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "records": [...],
              "pagination": {...}
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3vaVc85ehd1kg4Pb6ED6fZa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/poultry/incubation
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Incubation Record'
      description: 'Create a new incubation record'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      batch_number:
        name: batch_number
        description: 'Unique batch number'
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      egg_type:
        name: egg_type
        description: 'Egg type (chicken, duck, turkey)'
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'Breed name'
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      egg_count:
        name: egg_count
        description: 'Number of eggs'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Incubation start date'
        required: true
        example: aspernatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      incubation_days:
        name: incubation_days
        description: 'Incubation period in days'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      temperature:
        name: temperature
        description: 'Temperature in Celsius'
        required: true
        example: dolorem
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      humidity_percentage:
        name: humidity_percentage
        description: 'Humidity percentage'
        required: true
        example: debitis
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      egg_size:
        name: egg_size
        description: 'Egg size (small, medium, large)'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      batch_number: minima
      egg_type: corporis
      breed: eos
      egg_count: 12
      start_date: aspernatur
      incubation_days: 3
      temperature: dolorem
      humidity_percentage: debitis
      egg_size: soluta
      notes: incidunt
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Incubation record created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ve4638DZfPgav6cbhka1d5E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/poultry/incubation/{id}/results'
    metadata:
      groupName: 'Poultry Management'
      groupDescription: |-

        APIs for managing poultry flocks, records, and incubation
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Incubation Results'
      description: 'Update incubation record with hatching results'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Incubation record ID'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      hatched_count:
        name: hatched_count
        description: 'Number of hatched eggs'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      unhatched_count:
        name: unhatched_count
        description: 'Number of unhatched eggs'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Additional notes'
        required: false
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      hatched_count: 4
      unhatched_count: 10
      notes: quae
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Incubation results updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zbae6hE56V13PD4ckafvdg8'
    controller: null
    method: null
    route: null
    custom: []
